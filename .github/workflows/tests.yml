name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_breakout_analytics
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-mysql-client

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock pytest-html

    - name: Create test environment
      run: |
        mkdir -p logs
        mkdir -p ML_Webserver/logs
        mkdir -p analytics/logs

    - name: Wait for MySQL to be ready
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" -u"root" -p"rootpassword" --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done
        echo "MySQL is ready!"

    - name: Run all tests with CI test runner
      env:
        TEST_DATABASE: test_breakout_analytics
        TEST_DB_HOST: 127.0.0.1
        TEST_DB_PORT: 3306
        TEST_DB_USER: root
        TEST_DB_PASSWORD: rootpassword
        FLASK_RUN_PORT: 5001
        ML_SERVICE_PORT: 5003
      run: |
        python tests/ci_test_runner.py

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./htmlcov/coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          logs/
          ML_Webserver/logs/
          analytics/logs/
          analytics/analytics.log
          ML_Webserver/ml_service.log
