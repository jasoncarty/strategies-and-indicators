# Nginx Configuration Template for Trading Strategies Application
# This template will be processed to replace placeholders with actual values

events {
    worker_connections ${NGINX_WORKER_CONNECTIONS};
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout ${NGINX_KEEPALIVE_TIMEOUT};
    types_hash_max_size ${NGINX_TYPES_HASH_MAX_SIZE};
    client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level ${NGINX_GZIP_LEVEL};
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=${NGINX_API_RATE_LIMIT}r/s;
    limit_req_zone $binary_remote_addr zone=ml:10m rate=${NGINX_ML_RATE_LIMIT}r/s;

    # Upstream servers
    upstream analytics {
        server analytics:${ANALYTICS_PORT};
        keepalive 32;
    }

    upstream ml_service {
        server ml_service:${ML_SERVICE_PORT};
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Analytics service
        location /analytics/ {
            limit_req zone=api burst=${NGINX_API_BURST} nodelay;

            proxy_pass http://analytics/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout ${NGINX_PROXY_CONNECT_TIMEOUT}s;
            proxy_send_timeout ${NGINX_PROXY_SEND_TIMEOUT}s;
            proxy_read_timeout ${NGINX_PROXY_READ_TIMEOUT}s;
        }

        # ML service
        location /ml/ {
            limit_req zone=ml burst=${NGINX_ML_BURST} nodelay;

            proxy_pass http://ml_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout ${NGINX_PROXY_CONNECT_TIMEOUT}s;
            proxy_send_timeout ${NGINX_PROXY_SEND_TIMEOUT}s;
            proxy_read_timeout ${NGINX_PROXY_READ_TIMEOUT}s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Default location
        location / {
            return 404;
        }
    }

    # HTTPS server (commented out - uncomment and configure SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Same location blocks as HTTP server
    #     location /analytics/ {
    #         proxy_pass http://analytics;
    #         # ... same proxy settings
    #     }
    # }
}
